{"version":3,"sources":["components/Landing.js","components/SignUp.js","components/SignIn.js","components/AddToInventory.js","components/Main.js","components/NavBar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Landing","state","react_default","a","createElement","Component","SignUp","id","className","type","placeholder","SignIn","AddToInventory","Main","react_router","exact","path","component","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","navbar","NavBar","App","components_Main","footer","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efaf39a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Landing extends Component { \n  state = { \n  }\n  render () {                                   \n      return (\n        <div>\n            <h1> Welcome to Chasing Zero </h1>\n             <p> To Be Completed: Display Notifications Here</p>\n        </div>\n      )\n   }\n}","import React, { Component } from 'react';\nexport default class SignUp extends Component { \n  state = { \n  }\n  render () {                                   \n      return (\n        <div>\n             <div id='signinContainer'>\n                  <form id='form'>       \n                      <input className='input' type=\"text\"   \n                       placeholder=\"First Name\"/>\n                      <input className='input' type=\"text\"  \n                       placeholder=\"Last Name\"/>          \n                      <input className='input' type=\"text\"  \n                       placeholder=\"Email\"/>          \n                      <input className='input' type=\"password\" \n                       placeholder=\"Password\"/>\n                      <button id='submit'>Sign Up</button>\n                  </form>\n             </div>\n        </div>\n      )\n   }\n}","import React, { Component } from 'react';\nexport default class SignIn extends Component { \n  state = { \n  }\n  render () {                                   \n      return (\n        <div>\n             <div id='signinContainer'>\n                  <form id='form'>       \n                      <input className='input' type=\"text\"  \n                       placeholder=\"Email\"/>          \n                      <input className='input' type=\"password\" \n                       placeholder=\"Password\"/>\n                      <button id='submit'>Login</button>\n                  </form>\n             </div>\n        </div>\n      )\n   }\n}","import React, { Component } from 'react';\nexport default class AddToInventory extends Component { \n  state = { \n  }\n  render () {                                   \n      return (\n        <div>\n             <div id='signinContainer'>\n                  <form id='form'>     \n                  {/*Needs to be better adapted for adding food items*/  }\n                      <input className='input' type=\"text\"  \n                       placeholder=\"Food Name\"/>          \n                      <input className='input' type=\"text\" \n                       placeholder=\"Quantity\"/>\n                       <input className='input' type=\"text\" \n                       placeholder=\"Expiration Date\"/>\n                      <button id='submit'>Add To Inventory</button>\n                  </form>\n             </div>\n        </div>\n      )\n   }\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Landing from './Landing';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport AddToInventory from './AddToInventory';\n\nconst Main = () => (\n  <main>\n    <Switch>\n    <Route exact path='/' component={Landing} />\n    <Route exact path='/SignUp' component={SignUp} />\n    <Route exact path='/SignIn' component={SignIn} />\n    <Route exact path='/AddToInventory' component={AddToInventory} />\n\n    </Switch>\n  </main>\n)\n\nexport default Main;\n","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n  render(){\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary navbar-fixed-top\">\n        <a className=\"navbar-brand\" href=\"/\">\n          Dronuts\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/SignUp\">Sign Up</a>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/SignIn\">Sign In </a>\n            </li>\n          </ul>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"/AddToInventory\">Add To Inventory </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Footer extends Component {\n  render(){\n    return (\n      <footer className=\"footer\">\n      <div className=\"container\">\n        <span className=\"text-muted\">Dronuts Group 3</span>\n      </div>\n    </footer>\n    )\n  }\n}\n\nexport default Footer;\n\n\n    ","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport { default as NavBar } from './components/NavBar';\nimport { default as footer } from './components/Footer';\n\n\n/*const navbar = window.location.pathname.includes(\"/employee\") ? <NavBar /> : <NavBar />;*/\nconst navbar = <NavBar />\n\nconst App = () => (\n  <div>\n    {navbar}\n    <Main /> \n    {footer}\n  </div>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}