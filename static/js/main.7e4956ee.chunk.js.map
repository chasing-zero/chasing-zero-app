{"version":3,"sources":["firebase-config.js","components/NavBar.js","components/Footer.js","components/EmailFormDialog.js","components/PhoneFormDialog.js","components/Landing.js","components/SignUp.js","components/SignIn.js","components/InventoryTable.js","components/AddInventoryItem.js","components/ManageInventory.js","components/ShoppingListBuilder.js","components/ViewRecipes.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["firebase_config","firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","withStyles","link","marginLeft","marginRight","homeButton","props","classes","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","IconButton_default","component","Link","to","color","aria-label","Home_default","Typography_default","variant","Footer","this","footer","align","Component","theme","backgroundColor","palette","background","paper","padding","spacing","unit","EmailFormDialog","state","open","handleClickOpen","_this","setState","handleClose","Button_default","onClick","Dialog_default","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","type","fullWidth","required","DialogActions_default","React","calculateItemsExpiringSoon","items","boundaryDate","sort","b","name","filter","item","_date","_format","_delimiter","formatItems","toLowerCase","split","dateItems","monthIndex","indexOf","dayIndex","yearIndex","month","parseInt","Date","stringToDate","expiresOn","Landing","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","dateObj","setDate","getDate","handleChange","bind","assertThisInitialized","date","itemsExpiringSoon","inventory","console","log","overall","es","selected","onChange","map","inventoryItem","SnackbarContent_default","snackbar","message","style","marginTop","PhoneFormDialog_EmailFormDialog","EmailFormDialog_EmailFormDialog","main","defineProperty","width","display","marginBottom","breakpoints","up","flexDirection","alignItems","concat","avatar","secondary","form","submit","halfwidth","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","FormControl_default","InputLabel_default","htmlFor","Input_default","autoComplete","FormControlLabel_default","control","Checkbox_default","value","InventoryTable","sleepDuration","now","getTime","e","handleInventoryItemsChanged","preventDefault","handleRemoveItem","doc_id","sleepFor","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","n","key","scope","boughtOn","icon","handleClick","Delete_default","overflowX","minWidth","db","firestore","dateToString","dateObject","m","String","getMonth","d","getYear","AddInventoryItem","nextIdNumber","Math","floor","random","currentDate","defaultExpirationDate","handleSubmit","event","target","data","collection","add","onSubmit","gutterBottom","itemspacing","ManageInventory","title","components_AddInventoryItem","components_InventoryTable","allRecipes","img","ingredients","ShoppingList","flatItems","flat","elem","index","SearchParameters","DisplayRecipieList","selectedRecipes","JSON","parse","localStorage","getItem","recipes","toString","recipe","push","setItem","stringify","newSelection","recipeName","valueOf","_this2","itemsForList","getIngredients","deselectRecipe","recipiesToDisplay","selectRecipe","RecipieList","_this3","recipesToDisplay","ShoppingListBuilder_SearchParameters","ShoppingListBuilder_DisplayRecipieList","ShoppingListBuilder","_this4","ingredientsSelected","recipesSelected","ShoppingListBuilder_RecipieList","ValidRecipes","filtered_recipes","ViewRecipes","missing_ingredient_count","i","ingredient","includes","filtered","check_valid_recipe","prevProps","Routes","react_router","exact","path","render","components_Landing","inventoryState","SignUp","SignIn","components_ManageInventory","ViewRecipes_ViewRecipes","recipeState","createMuiTheme","primary","dark","contrastText","blueGrey","status","danger","App","get","then","snapshot","empty","forEach","doc","assign","error","targetItemName","targetDocID","delete","catch","alert","core_styles","components_NavBar","components_Routes","components_Footer","Boolean","window","location","hostname","match","ReactDOM","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e4956ee.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nvar config = {\n    apiKey: \"AIzaSyBvZUjejhKnHQQaaAVKASIoD-eMCzWBLBM\",\n    authDomain: \"chasing-zero.firebaseapp.com\",\n    databaseURL: \"https://chasing-zero.firebaseio.com\",\n    projectId: \"chasing-zero\",\n    storageBucket: \"chasing-zero.appspot.com\",\n    messagingSenderId: \"124742710058\"\n  };\nexport default !firebase.apps.length ? firebase.initializeApp(config) : firebase.app();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\n\nconst styles = {\n  link: {\n    marginLeft: 10,\n    marginRight: 10,\n  }, \n  homeButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction NavBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className=\"NavClass\">\n        <ToolBar>\n\n          <IconButton component={Link} to='/' className={classes.homeButton} color=\"inherit\" aria-label=\"Menu\">\n            <HomeIcon />\n          </IconButton>\n\n          <Typography component={Link} to='/SignUp' variant=\"h6\" color=\"inherit\" className={classes.link}>\n            Sign Up\n          </Typography>\n\n          <Typography component={Link} to='/SignIn' variant=\"h6\" color=\"inherit\" className={classes.link}>\n            Sign In\n          </Typography>\n\n          <Typography component={Link} to='/ManageInventory' variant=\"h6\" color=\"inherit\" className={classes.link}>\n            Manage Inventory\n          </Typography>\n\n          <Typography component={Link} to='/ShoppingListBuilder' variant=\"h6\" color=\"inherit\" className={classes.link}>\n            Shopping List Builder\n          </Typography>\n\n          <Typography component={Link} to='/ViewRecipes' variant=\"h6\" color=\"inherit\" className={classes.link}>\n            View Recipes\n          </Typography>\n\n        </ToolBar>\n\n      </AppBar>\n    </div>\n  )\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);\n\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing.unit * 6,\n  },\n});\n\nclass Footer extends Component {\n  render(){\n    const { classes } = this.props;\n\n    return (\n      <footer className={classes.footer}>\n        \n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Made by the Chasing-Zero Group\n        </Typography>\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Footer);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class EmailFormDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>\n            Sign Up for Email Notifications\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To receive e-mail notifications of expiring foods, please enter your email address here. We will send\n              updates once a day, and you can unsubscribe at any time.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Sign Up\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class EmailFormDialog extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>\n            Sign Up for Text Notifications\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              To receive text notifications of expiring foods, please enter your phone number here. Standard text rates may apply. We will send\n              updates once a day, and you can unsubscribe at any time.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Phone Number\"\n              type=\"text\"\n              fullWidth\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Sign Up\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport EmailFormDialog from './EmailFormDialog';\nimport PhoneFormDialog from './PhoneFormDialog';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst styles = theme => ({\n  snackbar: {\n    margin: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  overall: {\n    marginLeft: theme.spacing.unit * 2,\n  },\n});\n\n// Convert a date from String representation into a Date object\nfunction stringToDate(_date,_format,_delimiter)\n{\n  var formatLowerCase=_format.toLowerCase();\n  var formatItems=formatLowerCase.split(_delimiter);\n  var dateItems=_date.split(_delimiter);\n  var monthIndex=formatItems.indexOf(\"mm\");\n  var dayIndex=formatItems.indexOf(\"dd\");\n  var yearIndex=formatItems.indexOf(\"yyyy\");\n  var month=parseInt(dateItems[monthIndex]);\n  month-=1;\n  var formatedDate = new Date(dateItems[yearIndex],month,dateItems[dayIndex]);\n  return formatedDate;\n}\n\n// Convert a Date object into a String representation -- not actually used, but I'll keep \n// the utility function for now.\nfunction dateToString(dateObject) {\n  var m = new String(dateObject.getMonth() + 1);\n  if (m.length === 1) {\n      m = \"0\" + m;\n  }\n  var d = new String(dateObject.getDate());\n  if (d.length === 1) {\n      d = \"0\" + d;\n  }\n  var y = new String(dateObject.getYear() + 1900);\n\n  return m + \"/\" + d + \"/\" + y;\n}\n\n// Given a list of items, calculate the items expiring soon\nfunction calculateItemsExpiringSoon(items, boundaryDate) {\n  items.sort((a,b) => (a.name - b.name));\n\n  // Filter out items that expire before May 2nd, 2019\n  var itemsFiltered = items.filter(\n    item => {\n      var date = stringToDate(item.expiresOn,\"mm/dd/yyyy\",\"/\");\n      return date <= boundaryDate;\n    }\n  );\n\n  return itemsFiltered;\n}\n\nclass Landing extends Component { \n\n  // Set default boundary date and bind the handleChange() function\n  constructor(props) {\n    super(props);\n\n    // Get the date that's exactly one week from the current date\n    var dateObj = new Date();\n    dateObj.setDate(dateObj.getDate() + 7);\n    this.state = {\n      boundaryDate: dateObj,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // If the field is changed, update state with the new value\n  handleChange(date) {\n    this.setState({\n      boundaryDate: date\n    });\n  }\n\n  render () {  \n    const { classes } = this.props;      \n    const { inventory } = this.props;    \n\n    // Calculate the items expiring soon, based on the current boundary date\n    var boundaryDateObj = this.state.boundaryDate;\n    const itemsExpiringSoon = calculateItemsExpiringSoon(inventory, boundaryDateObj);\n\n    console.log(itemsExpiringSoon);\n    return (\n      <div className={classes.overall}>\n          <h1> Welcome to Chasing Zero </h1>\n          <p>Showing items expiring by the following date (default = 1 week):</p> \n          <DatePicker \n            selected={this.state.boundaryDate}\n            onChange={this.handleChange}\n          />\n\n          <div>\n            {\n              itemsExpiringSoon.map(inventoryItem =>\n                <SnackbarContent\n                  className={classes.snackbar}\n                  message={\n                    `WARNING: Your ` + inventoryItem.name + ` will be expiring on ` + inventoryItem.expiresOn\n                  }\n                />\n              )\n            }\n          </div>\n          \n          <div style={{marginTop: \"50px\"}}>\n            <h2>Want to get daily notifications of expiring foods?</h2>\n            <PhoneFormDialog />\n            <p></p>\n            <EmailFormDialog />\n            <p> We will never share your information with any third party. </p>\n          </div>\n          \n\n      </div>\n    );\n   }\n}\n\nexport default withStyles(styles)(Landing);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    marginBottom: theme.spacing.unit * 10,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  halfwidth: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nfunction SignUp(props) {\n  const { classes } = props;\n\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n          </FormControl>\n          <FormControl margin=\"normal\" required className={classes.halfwidth}>\n            <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n            <Input id=\"firstname\" name=\"firstname\"/>\n          </FormControl>\n          <FormControl margin=\"normal\" required className={classes.halfwidth}>\n            <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n            <Input id=\"lastname\" name=\"lastname\"/>\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n          </FormControl>\n          \n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.submit}\n            component={Link} to=\"/\"\n          >\n            Sign Up\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nSignUp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignUp); ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 10,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nfunction SignIn(props) {\n  const { classes } = props;\n\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            component={Link} to=\"/\"\n          >\n            Sign in\n          </Button>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"default\"\n            className={classes.submit}\n            component={Link} to=\"/SignUp\"\n          >\n            Sign Up\n          </Button>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            component={Link} to=\"/\"\n          >\n            Continue as Guest\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignIn); ","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = {\n  root: {\n    width: '95%',\n    overflowX: 'auto',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  icon: {\n      width: 20,\n  },\n};\n\nclass InventoryTable extends Component {\n\n  // This is a (really bad) function to wait X milliseconds before continuing execution\n  sleepFor(sleepDuration) {\n    var now = new Date().getTime();\n    while (new Date().getTime() < now + sleepDuration) {}\n  }\n\n  // This function calls the function provided from App.js, passing in \n  // the item name and document ID (in Firebase) to be deleted.\n  async handleClick(item, e) {\n    const {handleInventoryItemsChanged} = this.props;\n\n    // Remove the item from the database\n    e.preventDefault();\n    const { handleRemoveItem } = this.props;\n    handleRemoveItem(item.name, item.doc_id);\n\n    // Notify main app that the database was changed => will refresh inventory state to be re-rendered\n    this.sleepFor(750);    \n    handleInventoryItemsChanged();\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { inventory } = this.props;\n    console.log(inventory);\n\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n\n          <TableHead>\n            <TableRow>\n              <TableCell>Food Item</TableCell>\n              <TableCell align=\"right\">Bought On</TableCell>\n              <TableCell align=\"right\">Expires On</TableCell>\n              <TableCell align=\"right\">Remove</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {inventory.map(n => (\n              <TableRow key={n.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {n.name}\n                </TableCell>\n                <TableCell align=\"right\">{n.boughtOn}</TableCell>\n                <TableCell align=\"right\">{n.expiresOn}</TableCell>\n                <TableCell className={classes.icon} >\n                  <IconButton onClick={this.handleClick.bind(this, n)} color=\"inherit\" align=\"right\" type=\"submit\">\n                      <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody> \n\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nInventoryTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InventoryTable);\n","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { withStyles } from '@material-ui/core';\n\nimport firebase from '../firebase-config';\nimport \"react-datepicker/dist/react-datepicker.css\";\nconst db = firebase.firestore();\n\n// Convert a date from String representation into a Date object\nfunction stringToDate(_date,_format,_delimiter)\n{\n  var formatLowerCase=_format.toLowerCase();\n  var formatItems=formatLowerCase.split(_delimiter);\n  var dateItems=_date.split(_delimiter);\n  var monthIndex=formatItems.indexOf(\"mm\");\n  var dayIndex=formatItems.indexOf(\"dd\");\n  var yearIndex=formatItems.indexOf(\"yyyy\");\n  var month=parseInt(dateItems[monthIndex]);\n  month-=1;\n  var formatedDate = new Date(dateItems[yearIndex],month,dateItems[dayIndex]);\n  return formatedDate;\n}\n\n// Convert a Date object into a String representation -- not actually used, but I'll keep \n// the utility function for now.\nfunction dateToString(dateObject) {\n  var m = new String(dateObject.getMonth() + 1);\n  if (m.length === 1) {\n      m = \"0\" + m;\n  }\n  var d = new String(dateObject.getDate());\n  if (d.length === 1) {\n      d = \"0\" + d;\n  }\n  var y = new String(dateObject.getYear() + 1900);\n\n  return m + \"/\" + d + \"/\" + y;\n}\n\nconst styles = theme => ({\n  form: {\n    width: '80%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit * 4,\n    marginBottom: theme.spacing.unit * 4,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  itemspacing: {\n    marginRight: theme.spacing.unit * 4,\n  },\n});\n\nclass AddInventoryItem extends Component {\n\n  // Set some default values - the state will get updated as we edit the form\n  constructor(props) {\n    super(props);\n\n    // Choose random number for next item ID\n    var nextIdNumber = Math.floor(Math.random() * 1500) + 1;\n    var currentDate = new Date();\n    var defaultExpirationDate = new Date();\n    defaultExpirationDate.setDate(defaultExpirationDate.getDate() + 7);\n\n    // Set initial state\n    this.state = {\n      name: '',\n      id: nextIdNumber,\n      boughtOn: dateToString(currentDate),\n      expiresOn: dateToString(defaultExpirationDate),\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // If a field is changed, update our state with that new value\n  handleChange(event) {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  }\n\n  // When we submit the form, add the item to the inventory\n  handleSubmit(event) {\n    const { handleInventoryItemsChanged } = this.props;\n\n    event.preventDefault();\n    var data = {\n      name: this.state.name,\n      boughtOn: this.state.boughtOn,\n      expiresOn: this.state.expiresOn,\n      id: this.state.id\n    }\n\n    db.collection('inventory').add(data);\n\n    // Choose random number for the next item ID\n    var nextIdNumber = Math.floor(Math.random() * 1500) + 1;\n\n    // Reset the boughtOn and expiresOn value\n    var currentDate = new Date();\n    var defaultExpirationDate = new Date();\n    defaultExpirationDate.setDate(defaultExpirationDate.getDate() + 7);\n\n    // Reset the rest of the form\n    this.setState({\n      name: \"\",\n      boughtOn: dateToString(currentDate),\n      expiresOn: dateToString(defaultExpirationDate),\n      id: nextIdNumber,\n    });\n    \n    // Update main app that inventory items were changed => will refresh inventory state to be re-rendered\n    handleInventoryItemsChanged();\n  }\n\n  // This method generates the form to add items to a user's inventory\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <div>\n        <p style={{marginLeft: \"16px\"}}>\n          By default, the item is considered to be 'bought' on the current date, and will expire 1 week from today.\n        </p>\n        <form className={classes.form} onSubmit={this.handleSubmit} required gutterBottom>\n          <FormControl margin=\"normal\" required className={classes.itemspacing}>\n            <InputLabel>Name of Food Item</InputLabel>\n            <Input \n              id=\"name\" \n              name=\"name\" \n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange} />\n          </FormControl>\n          <FormControl margin=\"normal\" required className={classes.itemspacing}>\n            <InputLabel>Bought (MM/DD/YY)</InputLabel>\n            <Input \n              id=\"boughtOn\" \n              name=\"boughtOn\"\n              type=\"text\"\n              value={this.state.boughtOn}\n              onChange={this.handleChange}/>\n          </FormControl>\n          <FormControl margin=\"normal\" required className={classes.itemspacing}>\n            <InputLabel>Expires (MM/DD/YY)</InputLabel>\n            <Input \n              id=\"expiresOn\" \n              name=\"expiresOn\"\n              type=\"text\"\n              value={this.state.expiresOn}\n              onChange={this.handleChange}/>\n          </FormControl>\n\n          <Button \n            className={classes.submit}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"default\"\n          >\n            Add to inventory\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddInventoryItem);","\nimport React, {Component} from 'react';\nimport InventoryTable from './InventoryTable';\nimport Typography from '@material-ui/core/Typography';\nimport 'typeface-roboto';\nimport { withStyles } from '@material-ui/core';\nimport AddInventoryItem from './AddInventoryItem';\n\nconst styles = theme => ({\n  title: {\n    marginTop: 15,\n    marginLeft: theme.spacing.unit * 2,\n  },\n});\n\n//TODO: This needs to be connected with Firebase to add/retrieve items\nclass ManageInventory extends Component { \n  render() {\n    const { classes } = this.props;\n    const { inventory } = this.props;\n    const { handleRemoveItem } = this.props;\n    const { handleInventoryItemsChanged } = this.props;\n\n    return (\n      <div>\n          <Typography variant=\"h3\" gutterBottom className={classes.title}>Add Items to your Inventory</Typography>\n          <AddInventoryItem \n            handleInventoryItemsChanged={handleInventoryItemsChanged} />\n          <Typography variant=\"h3\" gutterBottom className={classes.title}> Your Pantry </Typography>\n          <InventoryTable \n            inventory={inventory}\n            handleRemoveItem={handleRemoveItem} \n            handleInventoryItemsChanged={handleInventoryItemsChanged}/>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ManageInventory);\n\n","import React, { Component } from 'react';\nimport firebase from '../firebase-config';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport axios from 'axios';\n\nconst db = firebase.firestore();\n\nvar allRecipes = [{name : 'Chicken Alfredo', img : 'Images/ChickenAlfredo.jpg', \n                              ingredients:['chicken','Alfredo','pasta']}, \n                            {name : 'Oatmeal', ingredients:'Oats'},\n                            {name : 'Plain Pasta', img : 'Images/PlainPasta.png',\n                              ingredients:['Butter','pasta']},\n                            {name : 'Chicken and Rice', img : 'Images/ChickenAndRice.png',\n                              ingredients:['chicken','Rice','Salt','Pepper']}];\n\nfunction ItemThumbnail (props){\n  //No longer used\n  /*Change this so Src image, and title are props*/\n  console.log(props.imgFile);\n  return(\n  <div className=\"itemInfo\">\n    <img className=\"Avatar\"\n    /*change this to pull from data base*/\n      /*src={props.item.avatarUrl}\n      alt={props.item.name}\n      */\n      /*allegedly need to add a 'require()' so webpack works but still unable to\n       render local or external images. Read more at :\n       https://stackoverflow.com/questions/34582405/react-wont-load-local-images\n       */\n      src = {props.imgFile}      \n      alt={props.caption}\n    />\n  {/*May want to include other stuff like link to more details*/}\n    <button type='button' onClick= \"modifySelectedRecipies\"> Add/Remove From List </button>\n  </div>\n);\n}\n\nfunction ShoppingList (props){\n  console.log(props.items);\n  //var title = props.title;\n  var flatItems = props.items.flat();\n  return(\n  <div>\n  {/*decide if we want the title in the component or div*/}\n  <h2>List So Far:</h2>\n  {/*TBD: Export ability*/}\n  <button type=\"button\">Export List</button>\n  {/*products*/}\n  <Paper >\n        <Table >\n          <TableHead>\n            <TableRow>\n              <TableCell>Food Item</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {flatItems.map((elem,index,items) => (\n              <TableRow key = {index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {elem}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody> \n        </Table>\n      </Paper>\n\n  </div>\n);\n}\n\n\nclass SearchParameters extends Component{\n  /* will hold selected filters*/\n\n  render(){\n    return(\n      <div>\n        <h1> Search Parameters</h1>\n        <InputLabel htmlFor=\"item\">Find Recipes With: </InputLabel>\n        <Input id=\"item\" name=\"item\" autoComplete=\"item\" autoFocus />\n        <button type='button'> Search </button>\n        <div>\n        <input type='checkbox' name ='Vegiterian' />Vegitarian\n        <input type='checkbox' name ='Vegan' />Vegan\n        <input type='checkbox' name ='Gluten Free' />Gluten Free\n        <input type='checkbox' name ='Gluten Free' />Paleo Diet\n        </div>\n      </div>\n    );\n  }\n}\n\nclass DisplayRecipieList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      selectedRecipes : JSON.parse(localStorage.getItem('selectedRecipies'))\n    };\n    //this.selectRecipe = this.selectRecipe.bind(this);\n    //this.deselectRecipe = this.deselectRecipe.bind(this);\n\n  }\n  getIngredients(recipes){\n    return( recipes.map((elem)=>{\n      console.log(elem.ingredients.toString());\n      return elem.ingredients;\n    }));\n  }\n  selectRecipe(recipe){\n\n    console.log(recipe);\n    var recipes = JSON.parse(localStorage.getItem('selectedRecipes'));\n    console.log(recipes);\n    recipes.push(recipe);\n    localStorage.setItem('selectedRecipes',JSON.stringify(recipes));\n    this.setState({selectedRecipes : recipes})\n    console.log(recipes);\n  }\n  deselectRecipe(recipe){\n    console.log(recipe);\n    console.log(localStorage.getItem('selectedRecipes'));\n    var recipes = JSON.parse(localStorage.getItem('selectedRecipes'));\n    console.log(recipes);\n    //recipes appears to be null\n    var newSelection = recipes.filter(function(elem,index,recipes){\n      console.log(elem);\n      console.log(recipe.name);\n      var recipeName = recipe.name.valueOf();\n      console.log(recipeName);\n      console.log(elem.name.valueOf());\n      console.log(recipeName == (elem.name.valueOf()));\n      return recipeName !== (elem.name.valueOf());\n    });\n    // var idx = recipes.indexOf(recipe);\n    // if(idx !== -1) recipes.splice(idx,1);\n    localStorage.setItem('selectedRecipes',JSON.stringify(newSelection));\n    this.setState({'selectedRecipes': newSelection});\n    console.log(recipes);\n  }\n\n  render(){\n    //console.log(JSON.parse(this.props.recipiesToDisplay));\n    //change this to selected recipies to display\n    var selectedRecipes = JSON.parse(localStorage.getItem('selectedRecipes'));\n    //var selectedRecipes = this.state.selectedRecipes;\n    console.log(this.state.selectedRecipes);\n    //hi\n    var itemsForList = this.getIngredients(selectedRecipes);\n    return(\n      <div>\n      <div className=\"sideColumnLeft\">\n        <h2> Recipies Selected: </h2>\n        <Paper >\n          <Table >\n            <TableHead>\n              <TableRow>\n                <TableCell>Recipe</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {selectedRecipes.map((elem,index,items) => (\n                <TableRow key = {index}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {elem.name}\n                  </TableCell>\n                  <TableCell>\n                    <button type=\"button\" onClick={this.deselectRecipe.bind(this,elem)}>\n                      Remove From List\n                    </button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody> \n          </Table>\n        </Paper>\n        <h2> Recipies to choose from </h2>\n        <Paper >\n          <Table >\n            <TableHead>\n              <TableRow>\n                <TableCell>Recipe</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {this.props.recipiesToDisplay.map((elem,index,items) => (\n                <TableRow key = {index}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {elem.name}\n                  </TableCell>\n                  <TableCell>\n                    <button type=\"button\" onClick={this.selectRecipe.bind(this,elem)}>\n                      Add To List\n                    </button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody> \n          </Table>\n        </Paper>\n      </div>\n      <div className=\"sideColumnRight\">\n        <ShoppingList title='Shopping List So Far' items = {itemsForList}/>\n      </div>\n      </div>\n    );\n  }\n}\n\n/*This component manages the recepie search and selection process*/\nclass RecipieList extends Component{\n  /* will hold recepies to display*/\n  constructor(props){\n    super(props);\n    this.state = {\n      recipesToDisplay : [],\n      selectedRecipes : []\n    };\n  }\n\n  componentDidMount(){\n    this.setState({recipesToDisplay:allRecipes})\n  }\n\n  render(){\n    var recipesToDisplay = allRecipes;\n    // localStorage.setItem('selectedRecipes', JSON.stringify([\n    //   {name : 'Oatmeal', ingredients:'Oats'},\n    //   {name : 'Chicken and Rice', img : 'Images/ChickenAndRice.png',\n    //                           ingredients:['chicken','Rice','Salt','Pepper']}]));\n    // axios.get('https://api.edamam.com/search',{\n    //   params:{\n    //     q:'chicken',\n    //     app_id:'febca292',\n    //     app_key:'13d2d421277919388d177c2e0fc83309'\n    //   },\n    //   crossdomain:true\n    // }).then(function(response){\n    //   console.log(response);\n    //   response.data.hits.forEach((hit)=>{\n    //     recipesToDisplay.push({name: hit.recipe.label})\n    //     this.setState({recipesToDisplay: recipesToDisplay})\n    //   });\n    //   console.log(recipesToDisplay);\n    // })\n    // .catch(function(error){\n    //   console.log(error);\n    // });\n    return(\n      <div>\n        <SearchParameters/>\n        {/*<DisplayRecipieList recipiesToDisplay = {this.state.recipesToDisplay} />*/}\n        <DisplayRecipieList recipiesToDisplay = {this.state.recipesToDisplay} />\n      </div>\n    )\n  }\n}\n\n\nexport default class ShoppingListBuilder extends Component { \n  /* will hold ingredients and recepies selected so far*/\n  constructor(props){\n    super(props)\n    this.state = { \n    /*hardcoding ingredients for awhile*/\n    items : ['chicken', 'pasta', 'Alfredo'],\n    ingredientsSelected : [],\n    recipesSelected : [],\n    recipiesToDisplay : []\n    \n    }\n    var recipeList = []\n    localStorage.setItem('selectedRecipes',JSON.stringify(recipeList))\n  }\n\n  componentDidMount(){\n    //can load things when this component renders here.\n    // var recipeList = []\n    // localStorage.setItem('selectedRecipes',JSON.stringify(recipeList))\n  }\n\n\n  render () {   \n      console.log(JSON.parse(localStorage.getItem('selectedRecipes')));\n      //var itemsForList = this.getIngredients(JSON.parse(localStorage.getItem('selectedRecipes')));  \n      //console.log(itemsForList);\n      // window.addEventListener(\"storage\",()=>{\n      //   this.setState({recipesSelected: JSON.parse(localStorage.getItem('selectedRecipes'))})\n      // });\n      //this.setState({ingredientsSelected:itemsForList})\n      //Calculate items to display, update state\n      //recipies selected = getSelectedRecipies\n      //ingredients = combineSelectedIngredients()                              \n      return (\n        <div>\n          {/*Page Div, so Header and Body div do not cause an error*/}\n          <div>\n              {/*Header Div*/}\n              <Typography variant=\"h3\" gutterBottom >Shopping List Builder</Typography>\n               <h1>  </h1>\n               <p> Use this tool to turn recepies into a shopping list. </p>\n          </div>\n          {/*<div className=\"sideColumnRight\" >\n                      <ShoppingList title='Shopping List So Far' items = {itemsForList}/>\n                    </div>*/}\n          <div>\n            <RecipieList/>\n          </div>\n        </div>\n      )\n   }\n}","import React, { Component } from 'react';\nimport firebase from '../firebase-config';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport classNames from 'classnames';\n\nconst db = firebase.firestore();\n\n/*Change this so Src image, and title are props*/\nfunction ItemThumbnail (props){\n  console.log(props.imgFile);\n  /*want to make this a flex list of items so it displays horizontally against\n   the screen and resizes properly. Should also include things like why it was\n   suggested, or other info about it.\n  */\n  return(\n  <div className=\"itemInfo\">\n    <img className=\"Avatar\"\n    /*change this to pull from data base*/\n      /*src={props.item.avatarUrl}\n      alt={props.item.name}\n      */\n      /*allegedly need to add a 'require()' so webpack works but still unable to\n       render local or external images. Read more at :\n       https://stackoverflow.com/questions/34582405/react-wont-load-local-images\n       */\n      src = {props.imgFile}      \n      alt={props.caption}\n    />\n  {/*May want to include other stuff like link to more details*/}\n  </div>\n);\n}\n\n/*very similar to RecipeParameters in ShoppingListBuilder.js consider combining */\nclass RecipeSearchParameters extends Component{\n  /* will hold selected filters*/\n  state = {\n  \n  }\n  render(){\n    return(\n      <div>\n        <h1> Search Parameters</h1>\n        <p> TBD: Hook these up to the data base so they work</p>\n      </div>\n    );\n  }\n}\n\n// /*very similar to DisplayRecipieList in ShoppingListBuilder.js consider combining */\n// class DisplaySuggestedRecipieList extends Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:{}\n//     };\n//   }\n//   render(){\n//     return(\n//       <div>\n//         {this.state.data.name}\n//                                   <p>Because...</p>\n//       </div>\n//     );\n//   }\n// }\n\n\n\nfunction ValidRecipes(props){\n  // const recipes = props.recipes;\n  // var recipe_promise = new Promise(function(){\n  //   return recipes.filter(recipe => check_valid_recipe(recipe.ingredients));\n  // });\n  //const filtered_recipes = recipes.filter(recipe => check_valid_recipe(recipe.ingredients));\n \n  return (\n    <TableBody>\n    {props.filtered_recipes.map(n => (\n          \n                <TableRow key={n.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {n.name}\n                </TableCell>\n                <TableCell>\n                {n.ingredients.toString()}\n                </TableCell>\n              </TableRow>\n             ))}\n      </TableBody>\n  )\n  \n}\n\nexport default class ViewRecipes extends Component { \n  constructor(props){\n    super(props);\n    this.state = {\n      recipes: this.props.recipe,\n      inventory: this.props.inventory,\n      filtered_recipes: []//this.props.recipe.filter(recipe => check_valid_recipe(recipe.ingredients))\n    };\n    //console.log(this.state.filtered_recipes);\n  }\n\n  check_valid_recipe(ingredients){\n    console.log('test');\n    let missing_ingredient_count = 0;\n    var check = true;\n    for (let i = 0; i < ingredients.length; i++){\n      let ingredient = ingredients[i];\n      if (!(this.props.inventory.map(item => item.name).includes(ingredient))){\n        //console.log('recipe ingredient not in inventory');\n        console.log(ingredient);\n        console.log(missing_ingredient_count);\n        missing_ingredient_count++;\n        if (missing_ingredient_count > 1){\n          console.log('failed');\n          check = false;\n          return false;\n        }\n      } \n       \n    } \n    return true\n  }\n\n  componentDidMount(){\n    let filtered = []\n    for (let i=0; i<this.props.recipe.length; i++){\n      let recipe = this.props.recipe[i];\n      if (this.check_valid_recipe(recipe.ingredients)) {\n        filtered.push(recipe);\n      }\n    }\n    this.setState({\n      filtered_recipes: filtered\n    })\n     \n  }\n\n  componentDidUpdate(prevProps){\n    let filtered = []\n    if (prevProps.recipe != this.props.recipe){\n      console.log(this.props.recipe);\n      console.log(this.props.inventory);\n      for (let i=0; i<this.props.recipe.length; i++){\n        let recipe = this.props.recipe[i];\n        if (this.check_valid_recipe(recipe.ingredients)) {\n          filtered.push(recipe);\n        }\n      }\n      this.setState({\n        recipes: this.props.recipe,\n        inventory: this.props.inventory,\n        filtered_recipes: filtered\n      })\n    }  \n  }\n\n  render () {  \n      //const { classes } = this.props.classes;\n      //const { recipe } = this.props.recipe;                                \n      return (\n        <div style={{margin: '30px'}}>\n             <h1> View Recipes </h1>\n             <TextField\n                id=\"outlined-search\"\n                label=\"Search recipe\"\n                type=\"search\"\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n             <h1> Recipes to choose from </h1>\n\n            <Paper >\n        <Table >\n\n          <TableHead>\n            <TableRow>\n              <TableCell>Recipe</TableCell>\n              <TableCell>Ingredients</TableCell>\n             \n            </TableRow>\n          </TableHead>\n\n          \n          <ValidRecipes filtered_recipes={this.state.filtered_recipes}/>\n          \n\n        </Table>\n      </Paper>\n        </div>  \n      );\n   }\n}","import React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Landing from './Landing';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport ManageInventory from './ManageInventory';\nimport ShoppingListBuilder from './ShoppingListBuilder';\nimport ViewRecipes from './ViewRecipes';\n\nclass Routes extends Component {\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' render={\n          () => <Landing inventory={this.props.inventoryState.inventory}/>\n        } />\n        <Route exact path='/SignUp' component={SignUp} />\n        <Route exact path='/SignIn' component={SignIn} />\n\n        <Route exact path='/ManageInventory' render={\n          () => <ManageInventory \n                  inventory={this.props.inventoryState.inventory} \n                  handleRemoveItem = {this.props.handleRemoveItem} \n                  handleInventoryItemsChanged={this.props.handleInventoryItemsChanged}/>\n        } />\n        <Route exact path='/ShoppingListBuilder' component={ShoppingListBuilder} />\n        <Route exact path='/ViewRecipes' render={\n          () => <ViewRecipes \n                  recipe={this.props.recipeState} \n                  inventory={this.props.inventoryState.inventory}/>\n        }/>\n      </Switch>\n    );\n  }\n\n}\n\nexport default Routes;","import React, { Component }  from 'react';\nimport './App.css';\nimport firebase from './firebase-config';\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport Routes from './components/Routes';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\n// I'm not exactly sure how the theme works, but these colors should look OK?\nconst db = firebase.firestore();\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main\n      main: '#7a99c2',\n\n\n      // dark: will be calculated from palette.primary.main\n      dark: '#273951',\n\n      // contrastText: will be calculated to contrast with palette.primary.main\n      contrastText: '#FFFFFF'\n    },\n    secondary: blueGrey,\n  },\n\n  status: {\n    danger: 'orange',\n  }\n});\n\n\n\nclass App extends Component {\n  state = {\n    recipe: [],\n    inventory: [],\n  }\n\n  // Load the current inventory from the database\n  async componentDidMount() {\n    try {\n      db.collection('inventory').get().then(snapshot => {\n        var data = [];\n        if (snapshot.empty) {\n          console.log('no data');\n          return\n        }\n        snapshot.forEach(doc => {\n          console.log(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n\n          // We want to save the document ID as well, so save it with the rest of the data fields\n          data.push(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n        })\n        this.setState({\n          inventory: data\n        })\n      })\n    } catch (error) {\n      this.setState({\n        error\n      })\n    }\n\n    try {\n        db.collection('recipe').get().then(snapshot => {\n          var data = [];\n          if (snapshot.empty) {\n            console.log('no data');\n            return\n          }\n          snapshot.forEach(doc => {\n            console.log(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n\n             // We want to save the document ID as well, so save it with the rest of the data fields\n          data.push(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n        })\n        this.setState({\n          recipe: data\n        })\n      })\n    } catch (error) {\n      this.setState({\n        error\n      })\n    }\n  }\n\n  // An item has been added/removed to the database, so update inventory state to represent the new collection\n  handleInventoryItemsChanged = () => {\n    try {\n      db.collection('inventory').get().then(snapshot => {\n        var data = [];\n        if (snapshot.empty) {\n          console.log('no data');\n          return\n        }\n        snapshot.forEach(doc => {\n          console.log(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n\n          // We want to save the document ID as well, so save it with the rest of the data fields\n          data.push(Object.assign({}, doc.data(), {\"doc_id\": doc.id}));\n        })\n        this.setState({\n          inventory: data\n        })\n      })\n    } catch (error) {\n      this.setState({\n        error\n      })\n    }\n  }\n\n  // This function removes an item from the database.\n  handleRemoveItem(targetItemName, targetDocID) {\n    // Remove this item from the database\n    db.collection('inventory').doc(targetDocID).delete().then(function() {\n      console.log(\"Successfully deleted item \" + targetItemName + \" from inventory\");\n    }).catch(function(error) {\n      alert(\"error removing document: \" + error);\n    })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <NavBar />\n          <Routes \n\n            recipeState={this.state.recipe}\n            inventoryState={this.state}\n            handleRemoveItem={this.handleRemoveItem} \n            handleInventoryItemsChanged={this.handleInventoryItemsChanged}/>\n\n          <Footer />\n        </div>\n      </MuiThemeProvider>\n    );\n\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter> <App/> </BrowserRouter>, document.getElementById('root'));\n\n/* Very unsure which elementID is the 'root' */\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}